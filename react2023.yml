locale: nb-NO
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.results.description
      t: 2023-utgaven av den årlige undersøkelsen om de nyeste trendene i React-økosystemet.

    ###########################################################################
    # Introduction
    ###########################################################################

    - key: introduction.react2023
      t: |

          <span class="first-letter">R</span>eact har eksistert i 11 år, noe som kan være vanskelig å forstå når man ser på den nåværende utviklingsfarten innen webutvikling.

          Grunnen til at vi fortsatt snakker om React i dag, er at det på en eller annen måte har klart å holde tritt, og fornyer seg alltid for å møte utfordringene som brukerne møter på veien.

          Faktisk, ikke bare har React klart å holde seg relevant, med det leder også an med nye innovative mønstre som Server Components, og den kommende React-komplieren.

          Det er verdt å merke seg at denne dataen ble samlet inn mellom **27. oktober** og **15. november 2023**, noe som betyr at React 19 – samt andre nye funksjoner som er lansert etter denne perioden – ikke er dekket.

          Likevel er det mye å utforske her, fra komponentbiblioteker til statehåndteringsteknikker og applikasjonsmønstre. Her kan vi sammen gå gjennom resultatene fra den aller første State of React-undersøkelsen!

          *Dette er en uoffisiell undersøkelse uten tilknytning til verken Meta, Vercel eller React-teamet.*

          <span class="conclusion__byline">– Sacha Greif</span>

    ###########################################################################
    # Tshirt
    ###########################################################################

    - key: sections.tshirt.title
      t: T-skjorte

    - key: sections.tshirt.description
      t: |
          ## Støtt undersøkelsen med den offisielle State of React T-skjorten

          Er det et bibliotek? Et rammeverk? Et ukjent element i ferd med å mutere til noe farlig og ustabilt? Uansett hva du føler om React, vil det gjenspeiles i dette designet som reflekterer anime og science-fiction.

    - key: tshirt.about
      t: Om t-skjorten

    - key: tshirt.description
      t: |
          Vi bruker høykvalitets t-skjorter med print fra våre partnere Cotton Bureau.

    - key: tshirt.getit
      t: Kjøp den

    - key: tshirt.price
      t: USD $32 + shipping

    - key: tshirt.designer.heading
      t: Om designeren

    - key: tshirt.designer.name
      t: Christopher Kirk-Nielsen

    - key: tshirt.designer.bio
      t: |
          Opprinnelig fra Frankrike, men nå basert i USA, er Chris ikke bare en fantastisk front-end utvikler, men også en talentfull illustratør som spesialiserer seg på det retrovisuelle. Vi oppfordrer deg også til å sjekke ut hans [andre t-skjortedesign](https://chriskirknielsen.com/designs)!

    ###########################################################################
    # Content
    ###########################################################################

    # user_info

    - key: sections.user_info.description
      t: |
          **13,003** respondentene deltok i den aller første State of React-undersøkelsen. En liten utvalg av samfunnet som helhet, men fortsatt stort nok til å gi oss verdifulle data!

    - key: user_info.country.takeaway
      t: |
          Hoveddelen av respondenter kommer fra **USA** og **Europa**.

    - key: user_info.locale.takeaway
      aliasFor: user_info.locale.description

    - key: user_info.completion_stats.takeaway
      aliasFor: user_info.completion_stats.description

    # features

    - key: sections.features.description
      t: |
          Vi spurte respondentene om deres tanker om **28** unike funksjoner, fra de mest brukte hooks'ene som `useState`, til mer nisje-APIer som `useDeferredValue`. Sørg for å prøve å sortere etter “meninger”!

    - key: features.all_features
      t: Alle funksjoner

    - key: features.all_features.takeaway
      t: |
          Dette diagrammet oppsummerer alle spørsmål om forskjellige funksjoner fra undersøkelsen. Hovedstolpene representerer en respondents erfaring; og de er deretter videre delt opp etter den respondentens meninger. Du kan endre gruppering for å veksle mellom begge.

    - key: features.reading_list.takeaway
      t: >
          **30%** av respondenter la til en eller flere ting til leselisten deres underveis i undersøkelsen, for å lære mer om teamet senere. Her kan du se hva som ble valgt.

    - key: features.main_apis_items
      t: Hoved-APIer - Erfaring og meninger
    - key: features.main_apis_pain_points.takeaway
      t: >
          Blant de mest vanlige React-APIene var `forwardRef` uten tvil den som skapte mest frustrasjon for utviklerne, med `memo` på andreplass. Heldigvis jobber React-teamet med å rulle ut bedre alternativer til begge.

    - key: features.hooks_items
      t: Hooks - Erfaring og meninger
    - key: features.hooks_pain_points.takeaway
      t: >
          Ikke særlig overraskende er det at `useEffect` og `useCallback` ble nevnt som de mest utfordrende React hooks'ene, i stor grad pga vanskeligheter med å holde orden på avhengighetstabellene.

    - key: features.new_apis_items
      t: Nye APIer - Erfaring og meninger
    - key: features.new_apis_pain_points.takeaway
      t: >
          Selv om React har en fantastisk evne til å fortsette å utvikle seg, og å holde seg relevant over tid, kommer det også med en kostnad. Nye APIer som **Server Components** kan absolutt være utfordrende å ta i bruk.

    # libraries

    - key: sections.libraries.description
      t: |
          Vi har gjort litt om på diagrammene våre for å fremheve ikke bare utvikleropplevelsen, men også *meninger*. Sørg for å utforske disse nye grupperings- og sorteringsalternativene for å finne ut hvilke biblioteker som får mest kjærlighet… eller minst!

    - key: tools.all_tools_experience
      t: Bibliotek - Erfaring og meninger
    - key: tools.all_tools_experience.takeaway
      t: >
          Blant React-biblioteker og rammeverk er **Next.js** og **TanStack Query** i front når det gjelder generell positivitet.

          Merk at noen elementer som `useState` og `fetch` også ble inkludert for å gi en referanse, selv om de ikke er biblioteker i seg selv.

    - key: tools.scatterplot_overview
      t: Bibliotek - Bruk og retensjon
    - key: tools.scatterplot_overview.takeaway
      t: >
          Blant biblioteker og rammeverk var **Next.js** det eneste elementet som scorer høyt både på bruk og retensjon. Verdt å merke seg er det også at selv om enda flere hadde brukt **Create React App** enn Next, var det mye færre som var villige til å fortsette å bruke det fremover.

    # component libraries

    - key: tools.component_libraries_experience
      t: Komponentbibliotek - Erfaring og meninger
    - key: tools.component_libraries_experience.takeaway
      t: >
          **React Aria** og **Radix** leder rangeringen når det gjelder positivitet, noe som tyder på at headless er tilnærmingen til komponentbiblioteker folk flest ønsker.

    # state management

    - key: tools.state_management_experience
      t: State-håndtering - Erfaring og meninger
    - key: tools.state_management_experience.takeaway
      t: >
          Utover **useState** er **Zustand** løsningen for state-håndtering med høyeste positivitet-rate. Og selv om **Redux** fortsatt har en stor brukerbase, er det ikke like populært som tidligere.

    # data loading

    - key: tools.data_loading_experience
      t: Lasting av data - Erfaring og meninger
    - key: tools.data_loading_experience.takeaway
      t: >
          **TanStack Query** har gjort seg bemerket en stund nå, og omdømmet gjenspeiles i dataene her. **TanStack Query**s metoden for datalasting er metoden respondentene hadde den mest positive oppfatningen av, rett etter den native `fetch`-APIen.

    # back-end infrastructure

    - key: tools.meta_frameworks_experience
      t: Meta-rammeverk - Erfaring og meninger
    - key: tools.meta_frameworks_experience.takeaway
      t: >
          Selv om du ikke vil ha store problemer med å finne noen som klager på **Next.js**, klarte det fortsatt å toppe den positive rangeringen for meta-rammeverk, etterfulgt av **Remix** og **Astro**.

    #other_tools

    - key: sections.other_tools.description
      t: |
          React er kjent for å fokusere på UI-rendering samtidig som det er ganske agnostisk til de andre delene av appen din, og dette gjenspeiles i det livlige økosystemet som har oppstått for å fylle disse hullene!

    # usage

    - key: sections.usage.description
      t: |
          Uansett hvilken versjon du bruker, hvilket applikasjonsmønster du adopterer, eller hvilken bransje du tilhører, finnes det ingen feil måte å bruke React på!

    - key: usage.js_app_patterns.takeaway
      t: >
          Til tross for fokuset på statisk sidegenerering, server-side rendering og serverkomponenter, er det interessant å merke seg at det store flertallet av React-brukere fortsatt jobber med Single Page Applications (SPA).

    - key: usage.react_version.takeaway
      t: >
          Merk at undersøkelsen ble gjennomført **før** kunngjøringen og lanseringen av React 19.

    # resources

    - key: sections.resources.description
      t: |
          En av de store grunnene til Reacts fortsatte dominans er den enorme mengden dokumentasjon, blogginnlegg, videoer og andre ressurser det har samlet opp gjennom årene. Her er bare et lite utvalg!

    - key: resources.learning_methods.takeaway
      t: |
          React-teamet har gjort en fantastisk jobb med det nye dokumentasjonen, så det er ingen overraskelse at det har blitt den viktigste måten folk lærer om rammeverket på.

    - key: resources.blogs_news_magazines.takeaway
      t: |
          Selv om denne listen inneholder flest av de vi forventer å finne der, er det verdt å feire tilstedeværelsen av React-spesifikke medier som **This Week in React** eller **React Status**.

    - key: resources.sites_courses.takeaway
      t: |
          Selv om **Stack Overflow** nylig har hatt sine egne utfordringer relatert til AI, topper det fortsatt rangeringen inntil videre.

    - key: resources.podcasts.takeaway
      t: |
          **Syntax** fortsetter å sin dominans over utviklerpodcast-landskapet. Det er også interessant å merke seg fraværet av noen aktive React-spesifikke podcaster blant topp 10.

    - key: resources.video_creators.takeaway
      t: |
          Selv om både **Theo** og **Web Dev Simplified** inneholdt React-innhold, er det interessant å merke seg at til tross for at **The Primeagen** vanligvis ikke dekker React, havner han likevel på tredjeplass.

    - key: resources.people.takeaway
      t: |
          Når det gjelder å være en innflytelsesrik skikkelse i React-miljøet, er det ingen overraskelse at **Dan Abramov** topper rangeringen – selv om både **Kent C. Dodds** og **Theo** ser ut til å utfordre om kronen.

    #awards
    - key: sections.awards.description
      t: |
          Årets prisutdeling ble dominert av ett veldig spesifikt prosjekt… hvor raskt vil du gjette hva det er?

    ###########################################################################
    # Charts
    ###########################################################################

    - key: options.features_categories.language
      aliasFor: sections.language.title
    - key: options.features_categories.browser_apis
      aliasFor: sections.browser_apis.title
    - key: options.features_categories.other_features
      aliasFor: sections.other_features.title

    ###########################################################################
    # Notes
    ###########################################################################

    - key: blocks.gender.note
      t: |
          Hvis du er interessert i å lære mer, har vi [skrevet et blogginnlegg](https://dev.to/sachagreif/is-our-survey-biased-against-women-49oj) som tar for seg kjønnsfordelingen og dynamikken mellom de i undersøkelsen.

    - key: blocks.source.note
      t: >

          Dette diagrammet oppsummerer en blanding av henvisninger, URL-parametere og fritekstsvar.

          - State of JS: [State of JS](https://stateofjs.com) epost-listen.

          - State of CSS: the State of CSS epost-list; matcher også `email`, `by email`, osv.

          - Work: matcher `work`, `colleagues`, `coworkers`, osv.

    ###########################################################################
    # Awards
    ###########################################################################

    - key: award.feature_adoption_delta_award.comment
      t: Med en **{value}** fremgang i 2022 har **top-level await** raskt blitt en integrert del av JavaScript.

    - key: award.tool_usage_delta_award.comment
      t: |
          **Vite** fortsetter å være det raskest voksende biblioteket der ute, med en **{value}** økning i bruken fra år til år!

    - key: award.tool_satisfaction_award.comment
      t: Vite tar igjen førsteplassen, med **{value}** av utviklerne villige til å bruke det igjen!

    - key: award.tool_interest_award.comment
      t: Gjettet du Vite? Nesten, men i år er **Vitest**-teknologien utviklerne er mest interesserte i med en **{value}** interesserate.

    - key: award.most_write_ins_award.comment
      t: Med **{value}** omtaler var **Bun** den mest omtalte teknologien totalt sett i fritekstsvar.

    - key: award.most_commented_tool_award.comment
      t: Med **{value}** kommentarer viste React at det igjen er det mest omtalte biblioteket!

    - key: award.most_loved_tool_award.comment
      t: Med **{value}** av alle utviklere som har en positiv oppfatning av det, avslutter Vite sitt seiersløp i disse prisene ved å være den mest elskede teknologien!

    ###########################################################################
    # Conclusion
    ###########################################################################

    - key: conclusion.react2023.josh_comeau
      t: |

          <span class="first-line">For et år!</span>

          Med introduksjonen av React Server Components vil jeg si at dette har vært det største året for React siden 2018, da React Hooks først ble introdusert.

          I løpet av de 5 årene siden 2018 har Hooks oppnådd en overveldende adopsjon. Hele 99,5 % av respondentene i undersøkelsen har tatt i bruk `useState`, og mindre enn 2 % er misfornøyde med det. Klassekomponenter eksisterer fortsatt, men de har blitt relegert til eldre kodebaser og sporadiske feilhåndteringskomponenter.

          Jeg lurer imidlertid på… Vil vi alle bruke Server Components 5 år etter at de ble lansert, i 2028? Jeg er ikke så sikker. Server Components-paradigmet krever dyp integrasjon med bundleren og ruteren. Det er ikke noe de fleste utviklere kan begynne å ta i bruk gradvis i sine nåværende React-kodebaser.

          React-utviklere liker å holde seg oppdatert; 71 % av respondentene i undersøkelsen sa at de brukte React 18, den nyeste versjonen tilgjengelig da disse dataene ble samlet inn. Samtidig er det fortsatt Create React App som er det mest brukte React-miljøet, til tross for at det offisielt er avviklet og ikke har hatt en utgivelse siden april 2022. Vi oppdaterer gjerne React når en ny versjon kommer ut, men vi har ikke tenkt å bytte til et annet miljø; 37 % av respondentene i undersøkelsen har aldri engang brukt SSR (Server Side Rendering), selv om det har vært et alternativ i over et tiår nå!

          Hvis jeg måtte gjette, ville jeg sagt at det i 2028 vil være to versjoner av React i bred sirkulasjon med omtrent like mye bruk. Den “full-stack” versjonen, med Server Components og Server Actions, og klient-only Single Page App-versjonen.

          Det er interessante tider vi lever i! Jeg er spent på å se hvordan React og økosystemet det er en del av utvikler seg i årene som kommer. ❤️

    - key: conclusion.react2023.josh_comeau.bio
      t: Programvareutvikler og pedagog. Skaper av [The Joy of React](https://www.joyofreact.com/)

    ###########################################################################
    # Picks
    ###########################################################################

    - key: picks.my_pick
      t: "Mine valg for 2023: "
    - key: picks.intro
      t: Vi spurte medlemmene av react-samfunnet om å dele deres "Årets valg"

    # https://zustand-demo.pmnd.rs
    - key: picks.jack_herrington.name
      t: Zustand
    - key: picks.jack_herrington.bio
      t: Ingeniør og YouTuber
    - key: picks.jack_herrington.description
      t: |
          Enkel, elegant og utvidbar state-håndtering som "bare fungerer". I dag trenger du kanskje ikke state-håndtering, men hvis du gjør det, er Zustand et flott sted å begynne.

    # https://react.dev/reference/rsc/server-components
    - key: picks.alex_sidorenko.name
      t: React Server Components
    - key: picks.alex_sidorenko.bio
      t: Lager korte videoer om Next.js på Twitter
    - key: picks.alex_sidorenko.description
      t: |
          For elleve år siden gjenoppfant React webutvikling ved å utfordre etablerte praksiser. Nå gjør React dette igjen med RSC.

          P.S. En stor takk til Next.js-teamet for å fremme denne nye visjonen.

    # https://youtube.com/watch?v=zqhE-CepH2g
    - key: picks.sam_selikoff.name
      t: |
          "Mind the Gap" – Ryan Florence's foredrag på Big Sky Dev Con 2024
    - key: picks.sam_selikoff.bio
      t: Videoer for frontendutviklere på Build UI og YouTube, medvert på Frontend First podcasten
    - key: picks.sam_selikoff.description
      t: |
          Ryan viser mesterlig hvordan Reacts nye "use server" og "use client" direktiver lar oss bygge rike funksjoner på begge sider av nettverket, ved å bruke det samme, enhetlige paradigmet. Et must-see for enhver React-utvikler.

    # https://www.remotion.dev/
    - key: picks.sebastien_lorber.name
      t: Remotion
    - key: picks.sebastien_lorber.bio
      t: Skaper av [This Week in React](https://thisweekinreact.com/)
    - key: picks.sebastien_lorber.description
      t: |
          Ideen om å lage programmerbare videoer i React fortsetter å fascinere meg. Remotion er et ganske diskret prosjekt som fortsetter å vokse sakte men sikkert, og har blitt vellykket adoptert av DevRels, undervisere, indie-skapere og større selskaper (spesielt GitHubs Unwrapped).

    # https://buildui.com/posts/instant-search-params-with-react-server-components
    - key: picks.aurora_scharff.name
      t: Umiddelbare søkeparametere med React Server Components
    - key: picks.aurora_scharff.bio
      t: Web-utvikler og konsulent hos Inmeta
    - key: picks.aurora_scharff.description
      t: |
          Dette blogginnlegget tar for seg et problem du mest sannsynlig vil støte på når du bygger en skikkelig app med Next.js App Router: håndtering av søkeparametere. Det er overraskende vanskelig å få interaksjoner til å oppføre seg "perfekt", og innlegget avsluttes med løsningen: useOptimistic. Det lærer deg også om overganger, med mange sanbbox-demoer.

    # https://mui.com/blog/introducing-pigment-css/
    - key: picks.josh_comeau.name
      t: Pigment CSS
    - key: picks.josh_comeau.bio
      t: Programvareutvikler og pedagog. Skaper av [The Joy of React](https://www.joyofreact.com/)
    - key: picks.josh_comeau.description
      t: |
          Material UI-teamet bygger et neste-generasjons CSS-in-JS-bibliotek som tar i bruk styled API-en i React Server Components-æraen. Det finnes mange CSS-in-JS-verktøy der ute, men dette oppfyller alle kravene mine.

    # https://www.propelauth.com/post/nextjs-challenges
    - key: picks.carl_vitullo.name
      t: It’s not just you, Next.js is getting harder to use
    - key: picks.carl_vitullo.bio
      t: Soloentrepenør som hoster [This Month in React](https://podcasts.apple.com/us/podcast/this-month-in-react/id1661733526), og community lead hos [Reactiflux](https://www.reactiflux.com/)
    - key: picks.carl_vitullo.description
      t: |
          Dette var et flott blogginnlegg! Jeg synes det fanger stemningen rundt React akkurat nå, og artikulerer tydelig en frustrasjon som har ulmet i økosystemet gjennom 2024.

    # https://sonner.emilkowal.ski
    - key: picks.miguel_angel_duran.name
      t: Sonner
    - key: picks.miguel_angel_duran.bio
      t: Twitch Streamer & innholdsskaper
    - key: picks.miguel_angel_duran.description
      t: |
          Sonner er den beste toast-komponenten for React. Den er visuelt slående, svært konfigurerbar, og har et enkelt API som kan brukes i ethvert prosjekt. Fantastisk arbeid av Emil.

    # https://docs.expo.dev/router/introduction/
    - key: picks.lydia_hallie.name
      t: Expo Router
    - key: picks.lydia_hallie.bio
      t: Uavhengig programvareutvikler og tekninsk innholdsskaper
    - key: picks.lydia_hallie.description
      t: |
          Expo Router er mitt valg på grunn av dets utrolige potensiale både i web- og native-miljøer. Det er det første rammeverket som utnytter hele kraften til React for å operere på tvers av alle plattformer, og gjør React til en ekte plattform-agnostisk renderer. Den filbaserte arkitekturen gjør det enklere for webutviklere å tilpasse seg native plattformer, noe som akselererer utviklingen og reduserer tiden det tar å lansere apper på alle enheter.

    #
    # - key: picks.xxx.name
    #   t:
    # - key: picks.xxx.bio
    #   t:
    # - key: picks.xxx.description
    #   t: |

    ###########################################################################
    # Sponsors
    ###########################################################################

    - key: sponsors.frontendmasters.description
      t: Utvikle ferdighetene dine med dyptgående, moderne kurs innen front-end.
    - key: sponsors.google_chrome.description
      t: Takk til Google Chrome teamet for støtten til vårt arbeid.
    - key: sponsors.tokyodev.description
      t: Finn din drømmejobb som utvikler i Japan idag.
    - key: sponsors.renderatl.description
      t: Tech-konferransen med fokus på alle-ting-web

    ###########################################################################
    # FAQ/About
    ###########################################################################

    - key: about.content
      t: |
          Undersøkelsen "State of React 2023" ble gjennomført fra 27. oktober til 15. november 2023, og samlet inn 13 003 svar. Resultatene ble publisert 20. juli 2024. Undersøkelsen kjøres av [Devographics](https://devographics.com/), et kollektiv bestående av meg ([Sacha Greif](https://sachagreif.com/)) og [Eric Burel](https://www.lbke.fr/), samt inviterte eksperter og bidragsytere til åpen kildekode.

          Logoen og T-skjorten for "State of React" ble designet av [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).

          ### Mål med undersøkelsen

          Denne undersøkelsen ble laget for å identifisere kommende trender i React-økosystemet, slik at utviklere kan ta informerte teknologiske valg.

          Som sådan er undersøkelsen fokusert på å forutse hva som kommer de neste årene, snarere enn å analysere hva som er populært akkurat nå. Derfor kan enkelte funksjoner eller teknologier bli utelatt, selv om de er utbredt i dag.

          Det bør også ses på som et **øyeblikksbilde av en spesifikk gruppe utviklere** og er ikke ment å representere hele React-økosystemet.

          ### Undersøkelsesdesign

          Undersøkelsen ble delvis basert på fjorårets undersøkelse, med en åpen tilbakemeldingsperiode hvor undersøkelsens utkast ble diskutert [på GitHub](https://github.com/Devographics/surveys/issues/85).

          Alle spørsmål i undersøkelsen var valgfrie.

          ### Undersøkelsens målgruppe

          Undersøkelsen var åpent tilgjengelig på nettet, og respondentene ble verken filtrert eller valgt ut på noen måte. Respondentene var hovedsakelig en blanding av deltakere fra tidligere undersøkelser (varslet gjennom en dedikert e-postliste) og trafikk fra sosiale medier.

          Det er verdt å merke seg at rammeverk, biblioteker osv. sto fritt til å oppmuntre sitt publikum til å delta i undersøkelsen, og noen benyttet seg av dette gjennom bannere, tweets osv. En detaljert oversikt over trafikkildene er inkludert i diagrammet "Sources".

          ### Prosjektfinansiering

          Finansiering av dette prosjektet kommer fra ulike kilder:

          - **Salg av T-skjorter**.

          - **Sponsede lenker**: lenkene til anbefalte ressurser nederst på hver side er levert av vår partner [Frontend Masters](https://frontendmasters.com/).

          - **Direkte finansiering**: i år har [Google](https://www.google.com/) og [TokyoDev](https://www.tokyodev.com/) finansiert arbeidet mitt med undersøkelsene.

          Enhver form for bidrag eller sponsing er svært verdsatt. Vi ønsker spesielt å samarbeide tettere med flere nettleserleverandører, siden de spiller en så sentral rolle i webøkosystemet.

          ### Teknisk oversikt

          Du kan finne en mer detaljert teknisk oversikt over hvordan undersøkelsene kjøres [her](https://dev.to/sachagreif/how-the-devographics-surveys-are-run-2023-edition-1p6a).

          **Merk: Dette er *ikke* en offisiell React-undersøkelse, og undersøkelsesteamet er ikke tilknyttet Meta, Vercel eller React-teamet.**

          ### Spesiell takk

          En spesiell takk for deres kontinuerlige støtte til Paul McMahon, Marc Grabanski og Justin E. Samuels.
